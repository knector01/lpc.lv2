lpc.lv2: LPC analysis + synthesis plugin for LV2

-- ABOUT --

Linear predictive coding (LPC) is an algorithm used to approximate audio
signals like human speech. The algorithm generates an excitation signal (such
as a pulse wave) that then passes through a filter to emulate the vocal tract.
Because it can represent speech signals quite efficiently, LPC has seen wide
use in speech synthesis and audio compression. Additionally, due to its
distinctive sound, LPC has been used in popular music to create
robotic-sounding voice effects.

This plugin aims to serve that last use case by providing an LPC engine for
use in compatible DAW software. The plugin itself is simply an LV2 wrapper
for rt_lpc, which was written by Misra et al. Detailed credits are included
at the end of this README.

For more information on LPC, I recommend the following resources:
  https://en.wikipedia.org/wiki/Linear_predictive_coding
  https://ccrma.stanford.edu/~hskim08/lpc/
I found the CCRMA page especially helpful for understanding the algorithm.

-- INSTALLATION --

> make
> make install

By default, the Makefile installs the plugin to the following path:
  ~/.lv2/lpc.lv2

-- PARAMETERS --

Order:
  The order of the filter created by the LPC engine. Higher values can
  approximate the original sound more closely. WARNING: if the order is set
  high enough, then loud resonances can show up. As a result, I recommend
  adding a peak limiter after this plugin in your DAW.

Whisper:
  Forces all audio to be treated as unpitched, which forces the excitation
  signal to always be noise. This creates a whisper-like effect.

OLA:
  Enables/disables Overlap-Add (OLA) mode. Can improve audio quality but can
  also cause some dissonance when used with singing. Also increases the CPU
  load of the plugin significantly.

Glottal Pulse:
  Instead of using a pulse train for the LPC excitation signal, use a glottal
  sample. Can make the resulting audio sound slightly more realistic.

Preemphasis:
  Emphasizes the input signal using a high-pass filter prior to running the
  LPC analysis. Also de-emphasizes the signal output from the LPC synthesizer
  afterwards.

Pitch Shift:
  Pitch-shifts the output audio up or down. Can create some neat effects.
  This setting does nothing if Whisper is enabled.

MIDI Tuning:
  Sets the root frequency of the MIDI note scale. (default A440)

MIDI Bend Range:
  Sets the range of the MIDI pitch bend.

-- TODO --

rt_lpc features to re-implement:
- GUI that shows filter response (possibly also show identified pitch)

Implement new features:
- Add settings that force unpitched signals to be pitched, or mute them
  entirely. Maybe add separate gain controls for pitched/unpitched.
- Reduce the window overlap amount to avoid dissonance. Also
  possibly add sliders to change the overlap amount and buffer size.
- Add other excitation waveforms (square, sawtooth, etc)
- Try other pitch identification algorithms (e.g. FFT-based rather than
  autocorrelation)

-- CREDITS --

This plugin is heavily based on rt_lpc, which was written by Ananya Misra,
Ge Wang, and Perry R. Cook. For more information, see the rt_lpc homepage
at the Princeton Sound Lab, and its wiki page:

  https://soundlab.cs.princeton.edu/software/rt_lpc/
  http://wiki.cs.princeton.edu/index.php/RT_LPC

Additionally, the MIDI features of this plugin were based on x42-autotune by
Robin Gareus:

	https://github.com/x42/fat1.lv2

Thanks!
